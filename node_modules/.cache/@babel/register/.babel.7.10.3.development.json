{
  "{\"sourceRoot\":\"/Users/trondmakonese/mod_4/pet-box/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/trondmakonese/mod_4/pet-box\",\"filename\":\"/Users/trondmakonese/mod_4/pet-box/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/trondmakonese/mod_4/pet-box\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/trondmakonese/mod_4/pet-box/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/trondmakonese/mod_4/pet-box",
      "filename": "/Users/trondmakonese/mod_4/pet-box/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/trondmakonese/mod_4/pet-box",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/trondmakonese/mod_4/pet-box/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/trondmakonese/mod_4/pet-box/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/trondmakonese/mod_4/pet-box/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar app = express();\n\nvar cors = require('cors');\n\napp.set('port', process.env.PORT || 3000);\napp.locals.title = 'Pet Box';\napp.locals.pets = [{\n  id: 'a1',\n  name: 'Rover',\n  type: 'dog'\n}, {\n  id: 'b2',\n  name: 'Marcus Aurelius',\n  type: 'parakeet'\n}, {\n  id: 'c3',\n  name: 'Craisins',\n  type: 'cat'\n}];\napp.use(express.json());\napp.use(cors());\napp.use(express[\"static\"]('public'));\napp.get('/', function (request, response) {\n  response.send('Oh hey Pet Box');\n});\napp.get('/api/v1/pets', function (request, response) {\n  var pets = app.locals.pets;\n  response.json({\n    pets: pets\n  });\n});\napp.get('/api/v1/pets/:id', function (request, response) {\n  var id = request.params.id;\n  var pet = app.locals.pets.find(function (pet) {\n    return pet.id === id;\n  });\n\n  if (!pet) {\n    return response.sendStatus(404);\n  }\n\n  response.status(200).json(pet);\n});\napp.listen(app.get('port'), function () {\n  console.log(\"\".concat(app.locals.title, \" is running on http://localhost:\").concat(app.get('port'), \".\"));\n});\napp.post('/api/v1/pets', function (request, response) {\n  var id = Date.now();\n  var pet = request.body;\n\n  for (var _i = 0, _arr = ['name', 'type']; _i < _arr.length; _i++) {\n    var requiredParameter = _arr[_i];\n\n    if (!pet[requiredParameter]) {\n      return response.status(422).send({\n        error: \"Expected format: { name: <String>, type: <String> }. You're missing a \\\"\".concat(requiredParameter, \"\\\" property.\")\n      });\n    }\n  }\n\n  var name = pet.name,\n      type = pet.type;\n  app.locals.pets.push({\n    name: name,\n    type: type,\n    id: id\n  });\n  response.status(201).json({\n    name: name,\n    type: type,\n    id: id\n  });\n});\napp[\"delete\"]('/api/v1/pets/:id', function (request, response) {\n  pets.findOneAndRemove({\n    id: req.params.id\n  }, function (err, pets) {\n    if (err) {\n      res.send('error removing');\n    } else {\n      console.log(pets);\n      res.status(204);\n    }\n  });\n}); // app.patch('/api/v1/pets/:id', function(req, res) {\n//     if (req.body.id && req.body.id != req.params.id) return res.status(400).json({error: 'ID in the body is not matching ID in the URL'})\n//     delete req.body.id\n//     req.collection.updateById(req.params.id, {$set: req.body}, function(e, results) {\n//   // console.log('boo', e, results)\n//     res.json(results)\n//     })\n// })\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImFwcCIsImNvcnMiLCJzZXQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsImxvY2FscyIsInRpdGxlIiwicGV0cyIsImlkIiwibmFtZSIsInR5cGUiLCJ1c2UiLCJqc29uIiwiZ2V0IiwicmVxdWVzdCIsInJlc3BvbnNlIiwic2VuZCIsInBhcmFtcyIsInBldCIsImZpbmQiLCJzZW5kU3RhdHVzIiwic3RhdHVzIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyIsInBvc3QiLCJEYXRlIiwibm93IiwiYm9keSIsInJlcXVpcmVkUGFyYW1ldGVyIiwiZXJyb3IiLCJwdXNoIiwiZmluZE9uZUFuZFJlbW92ZSIsInJlcSIsImVyciIsInJlcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1DLEdBQUcsR0FBR0YsT0FBTyxFQUFuQjs7QUFDQSxJQUFNRyxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUVBQyxHQUFHLENBQUNFLEdBQUosQ0FBUSxNQUFSLEVBQWdCQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFwQztBQUNBTCxHQUFHLENBQUNNLE1BQUosQ0FBV0MsS0FBWCxHQUFtQixTQUFuQjtBQUNBUCxHQUFHLENBQUNNLE1BQUosQ0FBV0UsSUFBWCxHQUFrQixDQUNkO0FBQUVDLEVBQUFBLEVBQUUsRUFBRSxJQUFOO0FBQVlDLEVBQUFBLElBQUksRUFBRSxPQUFsQjtBQUEyQkMsRUFBQUEsSUFBSSxFQUFFO0FBQWpDLENBRGMsRUFFZDtBQUFFRixFQUFBQSxFQUFFLEVBQUUsSUFBTjtBQUFZQyxFQUFBQSxJQUFJLEVBQUUsaUJBQWxCO0FBQXFDQyxFQUFBQSxJQUFJLEVBQUU7QUFBM0MsQ0FGYyxFQUdkO0FBQUVGLEVBQUFBLEVBQUUsRUFBRSxJQUFOO0FBQVlDLEVBQUFBLElB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QSxJQUFGO0FBQVFDLElBQUFBLElBQUksRUFBSkEsSUFBUjtBQUFjRixJQUFBQSxFQUFFLEVBQUZBO0FBQWQsR0FBMUI7QUFDSCxDQWREO0FBZ0JBVCxHQUFHLFVBQUgsQ0FBVyxrQkFBWCxFQUErQixVQUFDZSxPQUFELEVBQVVDLFFBQVYsRUFBdUI7QUFDbERSLEVBQUFBLElBQUksQ0FBQ3lCLGdCQUFMLENBQXNCO0FBQ2xCeEIsSUFBQUEsRUFBRSxFQUFFeUIsR0FBRyxDQUFDaEIsTUFBSixDQUFXVDtBQURHLEdBQXRCLEVBRUcsVUFBQzBCLEdBQUQsRUFBTTNCLElBQU4sRUFBZTtBQUNkLFFBQUcyQixHQUFILEVBQVE7QUFDUkMsTUFBQUEsR0FBRyxDQUFDbkIsSUFBSixDQUFTLGdCQUFUO0FBQ0MsS0FGRCxNQUVPO0FBQ1BPLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZakIsSUFBWjtBQUNBNEIsTUFBQUEsR0FBRyxDQUFDZCxNQUFKLENBQVcsR0FBWDtBQUNIO0FBQUMsR0FSRjtBQVNILENBVkQsRSxDQWVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Ryb25kbWFrb25lc2UvbW9kXzQvcGV0LWJveC8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKTtcblxuYXBwLnNldCgncG9ydCcsIHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMCk7XG5hcHAubG9jYWxzLnRpdGxlID0gJ1BldCBCb3gnO1xuYXBwLmxvY2Fscy5wZXRzID0gW1xuICAgIHsgaWQ6ICdhMScsIG5hbWU6ICdSb3ZlcicsIHR5cGU6ICdkb2cnIH0sXG4gICAgeyBpZDogJ2IyJywgbmFtZTogJ01hcmN1cyBBdXJlbGl1cycsIHR5cGU6ICdwYXJha2VldCcgfSxcbiAgICB7IGlkOiAnYzMnLCBuYW1lOiAnQ3JhaXNpbnMnLCB0eXBlOiAnY2F0JyB9XG5dO1xuXG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcblxuYXBwLnVzZShjb3JzKCkpO1xuXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKCdwdWJsaWMnKSk7XG5cblxuYXBwLmdldCgnLycsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICAgIHJlc3BvbnNlLnNlbmQoJ09oIGhleSBQZXQgQm94Jyk7XG59KTtcblxuYXBwLmdldCgnL2FwaS92MS9wZXRzJywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gICAgY29uc3QgcGV0cyA9IGFwcC5sb2NhbHMucGV0cztcblxuICAgIHJlc3BvbnNlLmpzb24oeyBwZXRzIH0pO1xufSk7XG5cbmFwcC5nZXQoJy9hcGkvdjEvcGV0cy86aWQnLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgICBjb25zdCB7IGlkIH0gPSByZXF1ZXN0LnBhcmFtcztcbiAgICBjb25zdCBwZXQgPSBhcHAubG9jYWxzLnBldHMuZmluZChwZXQgPT4gcGV0LmlkID09PSBpZCk7XG4gICAgaWYgKCFwZXQpIHtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnNlbmRTdGF0dXMoNDA0KTtcbiAgICB9XG4gICAgcmVzcG9uc2Uuc3RhdHVzKDIwMCkuanNvbihwZXQpO1xufSk7XG5cbmFwcC5saXN0ZW4oYXBwLmdldCgncG9ydCcpLCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coYCR7YXBwLmxvY2Fscy50aXRsZX0gaXMgcnVubmluZyBvbiBodHRwOi8vbG9jYWxob3N0OiR7YXBwLmdldCgncG9ydCcpfS5gKTtcbn0pO1xuXG5hcHAucG9zdCgnL2FwaS92MS9wZXRzJywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gICAgY29uc3QgaWQgPSBEYXRlLm5vdygpO1xuICAgIGNvbnN0IHBldCA9IHJlcXVlc3QuYm9keTtcblxuICAgIGZvciAobGV0IHJlcXVpcmVkUGFyYW1ldGVyIG9mIFsnbmFtZScsICd0eXBlJ10pIHtcbiAgICAgICAgaWYgKCFwZXRbcmVxdWlyZWRQYXJhbWV0ZXJdKSB7XG4gICAgICAgIHJldHVybiByZXNwb25zZVxuICAgICAgICAgICAgLnN0YXR1cyg0MjIpXG4gICAgICAgICAgICAuc2VuZCh7IGVycm9yOiBgRXhwZWN0ZWQgZm9ybWF0OiB7IG5hbWU6IDxTdHJpbmc+LCB0eXBlOiA8U3RyaW5nPiB9LiBZb3UncmUgbWlzc2luZyBhIFwiJHtyZXF1aXJlZFBhcmFtZXRlcn1cIiBwcm9wZXJ0eS5gIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHsgbmFtZSwgdHlwZSB9ID0gcGV0O1xuICAgIGFwcC5sb2NhbHMucGV0cy5wdXNoKHsgbmFtZSwgdHlwZSwgaWQgfSk7XG4gICAgcmVzcG9uc2Uuc3RhdHVzKDIwMSkuanNvbih7IG5hbWUsIHR5cGUsIGlkIH0pO1xufSk7XG5cbmFwcC5kZWxldGUoJy9hcGkvdjEvcGV0cy86aWQnLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgICBwZXRzLmZpbmRPbmVBbmRSZW1vdmUoe1xuICAgICAgICBpZDogcmVxLnBhcmFtcy5pZFxuICAgIH0sIChlcnIsIHBldHMpID0+IHtcbiAgICAgICAgaWYoZXJyKSB7XG4gICAgICAgIHJlcy5zZW5kKCdlcnJvciByZW1vdmluZycpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHBldHMpO1xuICAgICAgICByZXMuc3RhdHVzKDIwNCk7XG4gICAgfX0pXG59KTtcblxuXG5cblxuLy8gYXBwLnBhdGNoKCcvYXBpL3YxL3BldHMvOmlkJywgZnVuY3Rpb24ocmVxLCByZXMpIHtcbi8vICAgICBpZiAocmVxLmJvZHkuaWQgJiYgcmVxLmJvZHkuaWQgIT0gcmVxLnBhcmFtcy5pZCkgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtlcnJvcjogJ0lEIGluIHRoZSBib2R5IGlzIG5vdCBtYXRjaGluZyBJRCBpbiB0aGUgVVJMJ30pXG4vLyAgICAgZGVsZXRlIHJlcS5ib2R5LmlkXG4vLyAgICAgcmVxLmNvbGxlY3Rpb24udXBkYXRlQnlJZChyZXEucGFyYW1zLmlkLCB7JHNldDogcmVxLmJvZHl9LCBmdW5jdGlvbihlLCByZXN1bHRzKSB7XG4vLyAgIC8vIGNvbnNvbGUubG9nKCdib28nLCBlLCByZXN1bHRzKVxuLy8gICAgIHJlcy5qc29uKHJlc3VsdHMpXG4vLyAgICAgfSlcbi8vIH0pXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "app",
        "cors",
        "set",
        "process",
        "env",
        "PORT",
        "locals",
        "title",
        "pets",
        "id",
        "name",
        "type",
        "use",
        "json",
        "get",
        "request",
        "response",
        "send",
        "params",
        "pet",
        "find",
        "sendStatus",
        "status",
        "listen",
        "console",
        "log",
        "post",
        "Date",
        "now",
        "body",
        "requiredParameter",
        "error",
        "push",
        "findOneAndRemove",
        "req",
        "err",
        "res"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,GAAG,GAAGF,OAAO,EAAnB;;AACA,IAAMG,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AAEAC,GAAG,CAACE,GAAJ,CAAQ,MAAR,EAAgBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;AACAL,GAAG,CAACM,MAAJ,CAAWC,KAAX,GAAmB,SAAnB;AACAP,GAAG,CAACM,MAAJ,CAAWE,IAAX,GAAkB,CACd;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE,OAAlB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CADc,EAEd;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE,iBAAlB;AAAqCC,EAAAA,IAAI,EAAE;AAA3C,CAFc,EAGd;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE,UAAlB;AAA8BC,EAAAA,IAAI,EAAE;AAApC,CAHc,CAAlB;AAMAX,GAAG,CAACY,GAAJ,CAAQd,OAAO,CAACe,IAAR,EAAR;AAEAb,GAAG,CAACY,GAAJ,CAAQX,IAAI,EAAZ;AAEAD,GAAG,CAACY,GAAJ,CAAQd,OAAO,UAAP,CAAe,QAAf,CAAR;AAGAE,GAAG,CAACc,GAAJ,CAAQ,GAAR,EAAa,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAChCA,EAAAA,QAAQ,CAACC,IAAT,CAAc,gBAAd;AACH,CAFD;AAIAjB,GAAG,CAACc,GAAJ,CAAQ,cAAR,EAAwB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAC3C,MAAMR,IAAI,GAAGR,GAAG,CAACM,MAAJ,CAAWE,IAAxB;AAEAQ,EAAAA,QAAQ,CAACH,IAAT,CAAc;AAAEL,IAAAA,IAAI,EAAJA;AAAF,GAAd;AACH,CAJD;AAMAR,GAAG,CAACc,GAAJ,CAAQ,kBAAR,EAA4B,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAAA,MACvCP,EADuC,GAChCM,OAAO,CAACG,MADwB,CACvCT,EADuC;AAE/C,MAAMU,GAAG,GAAGnB,GAAG,CAACM,MAAJ,CAAWE,IAAX,CAAgBY,IAAhB,CAAqB,UAAAD,GAAG;AAAA,WAAIA,GAAG,CAACV,EAAJ,KAAWA,EAAf;AAAA,GAAxB,CAAZ;;AACA,MAAI,CAACU,GAAL,EAAU;AACN,WAAOH,QAAQ,CAACK,UAAT,CAAoB,GAApB,CAAP;AACH;;AACDL,EAAAA,QAAQ,CAACM,MAAT,CAAgB,GAAhB,EAAqBT,IAArB,CAA0BM,GAA1B;AACH,CAPD;AASAnB,GAAG,CAACuB,MAAJ,CAAWvB,GAAG,CAACc,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AAC9BU,EAAAA,OAAO,CAACC,GAAR,WAAezB,GAAG,CAACM,MAAJ,CAAWC,KAA1B,6CAAkEP,GAAG,CAACc,GAAJ,CAAQ,MAAR,CAAlE;AACH,CAFD;AAIAd,GAAG,CAAC0B,IAAJ,CAAS,cAAT,EAAyB,UAACX,OAAD,EAAUC,QAAV,EAAuB;AAC5C,MAAMP,EAAE,GAAGkB,IAAI,CAACC,GAAL,EAAX;AACA,MAAMT,GAAG,GAAGJ,OAAO,CAACc,IAApB;;AAEA,0BAA8B,CAAC,MAAD,EAAS,MAAT,CAA9B,0BAAgD;AAA3C,QAAIC,iBAAiB,WAArB;;AACD,QAAI,CAACX,GAAG,CAACW,iBAAD,CAAR,EAA6B;AAC7B,aAAOd,QAAQ,CACVM,MADE,CACK,GADL,EAEFL,IAFE,CAEG;AAAEc,QAAAA,KAAK,oFAA4ED,iBAA5E;AAAP,OAFH,CAAP;AAGC;AACJ;;AAV2C,MAWpCpB,IAXoC,GAWrBS,GAXqB,CAWpCT,IAXoC;AAAA,MAW9BC,IAX8B,GAWrBQ,GAXqB,CAW9BR,IAX8B;AAY5CX,EAAAA,GAAG,CAACM,MAAJ,CAAWE,IAAX,CAAgBwB,IAAhB,CAAqB;AAAEtB,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,IAAI,EAAJA,IAAR;AAAcF,IAAAA,EAAE,EAAFA;AAAd,GAArB;AACAO,EAAAA,QAAQ,CAACM,MAAT,CAAgB,GAAhB,EAAqBT,IAArB,CAA0B;AAAEH,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,IAAI,EAAJA,IAAR;AAAcF,IAAAA,EAAE,EAAFA;AAAd,GAA1B;AACH,CAdD;AAgBAT,GAAG,UAAH,CAAW,kBAAX,EAA+B,UAACe,OAAD,EAAUC,QAAV,EAAuB;AAClDR,EAAAA,IAAI,CAACyB,gBAAL,CAAsB;AAClBxB,IAAAA,EAAE,EAAEyB,GAAG,CAAChB,MAAJ,CAAWT;AADG,GAAtB,EAEG,UAAC0B,GAAD,EAAM3B,IAAN,EAAe;AACd,QAAG2B,GAAH,EAAQ;AACRC,MAAAA,GAAG,CAACnB,IAAJ,CAAS,gBAAT;AACC,KAFD,MAEO;AACPO,MAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACA4B,MAAAA,GAAG,CAACd,MAAJ,CAAW,GAAX;AACH;AAAC,GARF;AASH,CAVD,E,CAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "/Users/trondmakonese/mod_4/pet-box/",
      "sourcesContent": [
        "const express = require('express');\nconst app = express();\nconst cors = require('cors');\n\napp.set('port', process.env.PORT || 3000);\napp.locals.title = 'Pet Box';\napp.locals.pets = [\n    { id: 'a1', name: 'Rover', type: 'dog' },\n    { id: 'b2', name: 'Marcus Aurelius', type: 'parakeet' },\n    { id: 'c3', name: 'Craisins', type: 'cat' }\n];\n\napp.use(express.json());\n\napp.use(cors());\n\napp.use(express.static('public'));\n\n\napp.get('/', (request, response) => {\n    response.send('Oh hey Pet Box');\n});\n\napp.get('/api/v1/pets', (request, response) => {\n    const pets = app.locals.pets;\n\n    response.json({ pets });\n});\n\napp.get('/api/v1/pets/:id', (request, response) => {\n    const { id } = request.params;\n    const pet = app.locals.pets.find(pet => pet.id === id);\n    if (!pet) {\n        return response.sendStatus(404);\n    }\n    response.status(200).json(pet);\n});\n\napp.listen(app.get('port'), () => {\n    console.log(`${app.locals.title} is running on http://localhost:${app.get('port')}.`);\n});\n\napp.post('/api/v1/pets', (request, response) => {\n    const id = Date.now();\n    const pet = request.body;\n\n    for (let requiredParameter of ['name', 'type']) {\n        if (!pet[requiredParameter]) {\n        return response\n            .status(422)\n            .send({ error: `Expected format: { name: <String>, type: <String> }. You're missing a \"${requiredParameter}\" property.` });\n        }\n    }\n    const { name, type } = pet;\n    app.locals.pets.push({ name, type, id });\n    response.status(201).json({ name, type, id });\n});\n\napp.delete('/api/v1/pets/:id', (request, response) => {\n    pets.findOneAndRemove({\n        id: req.params.id\n    }, (err, pets) => {\n        if(err) {\n        res.send('error removing')\n        } else {\n        console.log(pets);\n        res.status(204);\n    }})\n});\n\n\n\n\n// app.patch('/api/v1/pets/:id', function(req, res) {\n//     if (req.body.id && req.body.id != req.params.id) return res.status(400).json({error: 'ID in the body is not matching ID in the URL'})\n//     delete req.body.id\n//     req.collection.updateById(req.params.id, {$set: req.body}, function(e, results) {\n//   // console.log('boo', e, results)\n//     res.json(results)\n//     })\n// })\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1593293491286
  }
}